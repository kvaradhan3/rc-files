#! /bin/sh

log() { echo $(date +%FT%T) "$(basename $0):" "$@" >&2 ; }

# make sure you are home
cd $HOME

log install homebrew and basic tools
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

# tools
brew      install zsh
brew      install python3
brew      install tmux
brew      install autojump
brew      install jq
brew      install cscope
brew      install nmap
brew      install mas
brew cask install netspot
brew cask install geektool

# geeklets
brew      install node

# fonts
brew tap homebrew/cask-fonts
brew cask install font-alegreya
brew cask install font-alegreya-sans
brew cask install font-fontawesome
brew cask install font-inconsolata
brew cask install font-source-code-pro
brew cask install font-source-serif-pro
brew cask install font-source-sans-pro
brew cask install font-humor-sans		# xkcd
brew cask install font-lato

# a wee bit of fun
brew install fortune
brew install cowsay

# GUI tools
brew cask install 1password-cli
brew cask install 1password
brew cask install Caffeine
brew cask install Go2Shell	 
brew cask install avibrazil-rdm
brew cask install QuickSilver
brew cask install iTerm2
brew cask install Emacs
brew cask install Fantastical
brew cask install OmniGraffle
brew cask install GeekTool
brew cask install intel-power-gadget
brew cask install Sync
brew cask install DropBox

# browsers
brew      install wget
brew      install lynx
brew cask install Firefox
brew cask install brave-browser

# social 
brew cask install WhatsApp
brew cask install Yammer
brew cask install slack
brew cask install VLC

# Cloudy
brew      install kubernetes-cli
brew      install awscli
brew      install docker
brew      install docker-compose
brew      install docker-machine
brew      install xhyve
brew      install docker-machine-driver-xhyve
brew cask install VirtualBox
brew cask install VirtualBox-extension-pack

brew cleanup --force
rm -f -r /Library/Caches/Homebrew/*

# things from MAS
masInstall() {
    mas install $(mas search $1 | head -1 | awk '{print $1}')
}
# masInstall wunderlist
# masInstall Xcode
mas lucky wunderlist
mas lucky Xcode

# this work is partial
log os defaults
defaults write com.apple.finder AppleShowAllFiles   -string YES
defaults write com.apple.finder QuitMenuItem        -bool true

defaults write com.apple.dock   autohide                         -bool true
defaults write com.apple.dock   magnification                    -bool true
defaults write com.apple.dock   minimize-to-application          -bool true
defaults write com.apple.dock   largesize                        -float 72
defaults write com.apple.dock   showMissionControlGestureEnabled -bool true
defaults write com.apple.dock   wvous-bl-corner			 -int  5
defaults write com.apple.dock   wvous-br-corner			 -int  6

defaults write com.apple.AppleMultitouchTrackpad                    \
                                Clicking                         -bool true
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad   \
                                Clicking                         -bool true
defaults write org.cups.PrintingPrefs UseLastPrinter             -bool False

/Applications/RDM.app/Contents/MacOS/SetResX -w 2880 -h 1800 -s 2.0

killall Finder
killall Dock

log cups-pdf --- fails, but...
(
    mkdir CUPS-PDF
    cd CUPS-PDF
    wget https://bitbucket.org/codepoet/cups-pdf-for-mac-os-x/downloads/CUPS-PDF%202.6.1%20Installer.pkg
    tar xf 'CUPS-PDF 2.6.1 Installer.pkg'
    tar xf cups-pdf.pkg/Payload
    tar xf generic-color-ppd.pkg/Payload
    sudo sh -c <<EOF
set -x
ln -s /var/spool/cups-pdf/ /Users/Shared/CUPS-PDF
cp etc/cups/cups-pdf.conf /etc/cups/cups-pdf.conf
cp usr/libexec/cups/backend/cups-pdf /usr/libexec/cups/backend/cups-pdf
cp usr/share/cups/model/PostscriptColor.ppd /usr/local/share/cups/model/PostscriptColor.ppd
killall -HUP cupsd
EOF
    cd ..
    rm -rf CUPS-PDF
)
getFonts() {
    log install $2 from developer.apple.com
    DMG=$1
    PKG=$2

    wget https://developer.apple.com/design/downloads/$DMG
    mount=$(hdiutil mount $DMG | sed -n 's/^.*Apple_HFS  *	//p')
    sudo installer -pkg "$mount/$PKG" -target /
    hdiutil unmount $mount
    rm -f $DMG
}

getFonts    SF-Font-Pro.dmg        "San Francisco Pro.pkg"
getFonts    SF-Font-Compact.dmg    "San Francisco Compact.pkg"
getFonts    SF-Mono.dmg	 	   "SF Mono Fonts.pkg"
getFonts    NY-Font.dmg            "NY Fonts.pkg"

# Add printers
log cups-pdf printer '(direct2pdf)' done
sudo sh -c <<LPSETUP_DONE
  lpadmin -E -p direct2pdf                                    \
          -v cups-pdf:/                                       \
          -P /usr/local/share/cups/model/PostscriptColor.ppd  \
          -o printer-is-shared=false
  cupsenable direct2pdf
  cupsaccept direct2pdf
  lpoptions -d direct2pdf
  cupssctl WebInterface=yes
LPSETUP_DONE

sudo sh -c <<EOF
set -x
grep /usr/local/bin/zsh /etc/shells >/dev/null ||
     echo /usr/local/bin/zsh >> /etc/shells
nvram boot-args="-v"
EOF

#
# now the individual tweaks
#
MYREPO=my.1password.com
MYACCT=kannan@ieee.org

log signin to 1password
eval $(op signin $MYREPO $MYACCT)

log retrieve ssh credentials from 1Password
mkdir     ~/.ssh
chmod 700 ~/.ssh
(
  cd ~/.ssh
  for i in $(op list documents |
             jq 'map(select(.overview.title | test("ssh"))) | .[].uuid')
  do
      eval x=$i
      fname=$(eval echo $(op get item $x |
                          jq '.details.documentAttributes.fileName'))
      log get document $x $fname
      op get document $x $fname > $fname
      chmod 400 $fname
  done
)

log Add ssh keys to keychain
ssh-add -A -K
rm -rf ~/.ssh

# clone the .rc files
git clone git@github.com:kvaradhan3/rc-files.git .rc &&
    ( cd .rc ; ./configure )

# change my shell
chsh -s /usr/local/bin/zsh $(whoami)

log initialize some basic apps
open -a Caffeine
open -a Go2Shell
open -a GeekTool
open -a "Intel Power Gadget"
open -a "Activity Monitor"
open -a Sync

